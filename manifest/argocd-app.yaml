apiVersion: v1
kind: Service 
metadata:
  name: app-argocd-service
spec:
  selector:
    app.kubernetes.io/name: app-argocd-application
  type: NodePort
  ports:
  - protocol: TCP
    nodeport: 31080
    port: 8080
    targetPort: 8080

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-argocd-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: app-argocd-application
  template:
    metadata:
      labels:
        app.kubernetes.io/name: app-argocd-application
    spec:
      containers:
      - name: app-argocd-container
        image: 343218222789.dkr.ecr.ap-northeast-2.amazonaws.com/eks-app:af411d6f350f8ec3766eded4f122a347e7edc9bb
        ports:
          - protocol: TCP
            containerPort: 8080

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-argocd-ingress
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    external-dns.alpha.kubernetes.io/hostname: application.cloud-route53-leeseoyoung.store
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-northeast-2:343218222789:certificate/a481b4a9-922e-44fc-9ece-8e92a90fcc96
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/success-codes: 200-399
    alb.ingress.kubernetes.io/ssl-redirect: "443"
spec:
  rules:
  - host: application.cloud-route53-leeseoyoung.store
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: app-argocd-service
            port:
              number: 8080 
